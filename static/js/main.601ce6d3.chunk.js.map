{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","fact","setFact","inputSearch","setInputSearch","info","setInfo","handleSubmit","useForm","fetchingUrl","url","console","log","fetch","then","res","json","result","className","value","onChange","e","target","defaultValue","number","type","defaultChecked","name","onSubmit","placeholder","text","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA6EeA,MAvEf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEyBF,mBAAS,IAFlC,mBAENG,EAFM,KAEOC,EAFP,OAGWJ,mBAAS,QAHpB,mBAGNK,EAHM,KAGAC,EAHA,KAKLC,EAAiBC,cAAjBD,aAiBR,SAASE,EAAYC,GACnBC,QAAQC,IAAIF,GACZG,MAAMH,GACHI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAM,OAAIf,EAAQe,MAG5B,OACE,sBAAKC,UAAU,MAAf,UAEE,oBAAIA,UAAU,aAAd,SAA2B,0GAE3B,sBAAKA,UAAU,aAAaC,MAAOd,EAAMe,SA1BxB,SAACC,GACpBf,EAAQe,EAAEC,OAAOC,cACjBd,EAAY,0BAAD,OAA2BR,EAAKuB,OAAhC,YAA0CH,EAAEC,OAAOC,aAAnD,WAwBT,UACE,4CAEE,uBAAOE,KAAK,QAAQN,MAAM,OAAOO,eAAuB,SAAPrB,EAAesB,KAAK,gBAEvE,yCAEE,uBAAOF,KAAK,QAAQN,MAAM,OAAOQ,KAAK,gBAExC,2CAEE,uBAAOF,KAAK,QAAQN,MAAM,SAASQ,KAAK,mBAI5C,uBAAMC,SAAUrB,GApCpB,WACEE,EAAY,0BAAD,OAA2BN,EAA3B,YAA0CE,EAA1C,UACXD,EAAe,OAkCb,UACE,uBACEqB,KAAK,OACLN,MAAOhB,EACP0B,YAAY,eACZT,SAAU,SAAAC,GAAC,OAAIjB,EAAeiB,EAAEC,OAAOH,UAEzC,uBAAOM,KAAK,SAASP,UAAU,gBAAgBC,MAAM,cAGvD,qBAAKD,UAAU,UAAf,SACE,6BAAKjB,EAAK6B,SAGZ,wBAAQZ,UAAU,gBAAgBa,QA7ClB,WAClBtB,EAAY,iCAAD,OAAkCJ,EAAlC,WA4CT,+BCzDS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.601ce6d3.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nimport './App.css';\n\nfunction App() {\n  const [fact, setFact] = useState(\"\");\n  const [inputSearch, setInputSearch] = useState(\"\");\n  const [info, setInfo] = useState(\"year\")\n\n  const { handleSubmit } = useForm();\n\n  \n  const infoSelector = (e) => {\n    setInfo(e.target.defaultValue)\n    fetchingUrl(`https://numbersapi.com/${fact.number}/${e.target.defaultValue}?json`)\n  }\n\n  function onSubmit() {\n    fetchingUrl(`https://numbersapi.com/${inputSearch}/${info}?json`)\n    setInputSearch(\"\");\n  }\n\n  const buttonClick = () => {\n    fetchingUrl(`https://numbersapi.com/random/${info}?json`)\n  }\n  \n  function fetchingUrl(url) {\n    console.log(url);\n    fetch(url)\n      .then(res => res.json())\n      .then(result => setFact(result))\n  }\n\n  return (\n    <div className=\"App\">\n\n      <h1 className=\"App-header\"><strong>Choose the type of information and enter a number to learn a fact!</strong></h1>\n\n      <div className=\"checkBoxes\" value={info} onChange={infoSelector}>\n        <label>\n          History\n          <input type=\"radio\" value=\"year\" defaultChecked={info===\"year\"} name=\"infotype\" />\n        </label>\n        <label>\n          Math\n          <input type=\"radio\" value=\"math\" name=\"infotype\" />\n        </label>\n        <label>\n          Trivia\n          <input type=\"radio\" value=\"trivia\" name=\"infotype\" />\n        </label>\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          type=\"text\"\n          value={inputSearch}\n          placeholder='Enter a year'\n          onChange={e => setInputSearch(e.target.value)}\n        />\n        <input type=\"submit\" className=\"btn btnSubmit\" value=\"Submit\" />\n      </form>\n        \n      <div className=\"factBox\">\n        <h3>{fact.text}</h3>\n      </div>\n\n      <button className=\"btn btnRandom\" onClick={buttonClick}>\n        Random number\n      </button>\n\n    </div>\n  )\n}\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}